apiVersion: v1
kind: Service
metadata:
  name: ${FERRETERIA_UID}-cluster-ip-service
  namespace: ${NAMESPACE}
  labels:
    app: ${FERRETERIA_UID}-app
spec:
  type: ClusterIP
  selector:
    app: ${FERRETERIA_UID}-app
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${FERRETERIA_UID}-deployment
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${FERRETERIA_UID}-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${FERRETERIA_UID}-app
    spec:
      containers:
        - name: ${FERRETERIA_UID}-app
          image: eva/${DOCKER_SUB_LEVEL}/app:$CI_COMMIT_SHA
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: FERRETERIA
              value: ${APP_FERRETERIA}
            - name: DOMAIN
              value: ${APP_DOMAIN}
            - name: DB_USER
              value: ${APP_DB_USER}
            - name: DB_PASSWORD
              value: ${APP_DB_PASSWORD}
            - name: DB_HOST
              value: ${APP_DB_HOST}
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: ${APP_DB_DATABASE}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${FERRETERIA_UID}-ingress-service
  namespace: ${NAMESPACE}
  labels:
    app: ${FERRETERIA_UID}-app
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  #tls:
  #  - hosts:
  #      - develop.prueba.devcp.app
  #      - develop.api.prueba.devcp.app
  #      - server.develop.api.prueba.devcp.app
  #    secretName: k8s-devcp-prueba
  rules:
    - host: ${APP_DOMAIN}
      http:
        paths:
          - path: /${FERRETERIA}
            backend:
              serviceName: ${FERRETERIA_UID}-cluster-ip-service
              servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: ${FERRETERIA_UID}-autoscaler
  namespace: ${NAMESPACE}
  labels:
    app: ${FERRETERIA_UID}-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ${FERRETERIA_UID}-deployment
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
