image: docker:19.03.1
services:
  - docker:19.03.1-dind

stages:
  - test
  # - install
  - build
  - deploy

test-app:
  image: mhart/alpine-node:12
  stage: test
  variables:
    NODE_ENV: test
    MONGODB_URI: $DATABASE
    JWT_KEY: 123456
    APP_PORT: 3000
    APP_HOST: localhost
    APP_URL: /api/v1
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: on_success
  script:
    - apk update
    - yarn
    - yarn test
  allow_failure: false

build-app:
  stage: build
  before_script:
    - apk add gettext
    - envsubst '\$DATABASE' < ./scripts/deploy.sh
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build --tag $DOCKER_USERNAME/backmean:$CI_COMMIT_SHA -f ./Dockerfile ./
    - docker push $DOCKER_USERNAME/backmean:$CI_COMMIT_SHA
  only:
    - develop

deploy-app:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: manual
  before_script:
    # Check for ssh-agent + rsync and install if not present
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )"
    - eval $(ssh-agent -s)
    # Inject the remote's private key
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - chmod 700 ~/.ssh
    # # Append keyscan output into known hosts
    - ssh-keyscan 167.71.55.161 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    # Connect and update branch with new changes
    - ssh root@167.71.55.161 "cd /var/www/backmean && git checkout develop && git pull origin develop"
    # Clean containers and images pass
    # Docker update images and run
    - ssh root@167.71.55.161 "cd /var/www/backmean && docker-compose build && docker-compose up -d"
